//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SGDE {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SGDE.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot evaluate code. Arguments could be required..
        /// </summary>
        internal static string Code_CannotEvaluate {
            get {
                return ResourceManager.GetString("Code_CannotEvaluate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Concurrency error.
        /// </summary>
        internal static string ContentUtil_DIDExists {
            get {
                return ResourceManager.GetString("ContentUtil_DIDExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level does not exist..
        /// </summary>
        internal static string GameContent_LevelNotExist {
            get {
                return ResourceManager.GetString("GameContent_LevelNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one game content can exist..
        /// </summary>
        internal static string GameReader_OnlyOneGameContent {
            get {
                return ResourceManager.GetString("GameReader_OnlyOneGameContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SceneNode cannot be loaded independent of another type..
        /// </summary>
        internal static string NodeReader_SceneNodeAbstract {
            get {
                return ResourceManager.GetString("NodeReader_SceneNodeAbstract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animation ID does not match saved ID.
        /// </summary>
        internal static string SpriteManager_AnimationIDMismatch {
            get {
                return ResourceManager.GetString("SpriteManager_AnimationIDMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animation Set ID does not match saved ID.
        /// </summary>
        internal static string SpriteManager_AnimationSetIDMismatch {
            get {
                return ResourceManager.GetString("SpriteManager_AnimationSetIDMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Texture ID does not match saved ID.
        /// </summary>
        internal static string SpriteManager_SpriteIDMismatch {
            get {
                return ResourceManager.GetString("SpriteManager_SpriteIDMismatch", resourceCulture);
            }
        }
    }
}
