//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SGDeContent {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SGDeContent.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue frame animation shouldn&apos;t occur on first frame. Ignoring and counting as one frame..
        /// </summary>
        internal static string Animation_ContinueAnimationOnFirstFrame {
            get {
                return ResourceManager.GetString("Animation_ContinueAnimationOnFirstFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frame cannot count as less then one frame. Specified value is {0}. Skipping..
        /// </summary>
        internal static string Animation_FPSTooLow {
            get {
                return ResourceManager.GetString("Animation_FPSTooLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t parse color &quot;{0}&quot;. Must be in AARRGGBB format and be in 16bit notation (0055AAFF)..
        /// </summary>
        internal static string Animation_InvalidColor {
            get {
                return ResourceManager.GetString("Animation_InvalidColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot parse degree measurement..
        /// </summary>
        internal static string Animation_InvalidDegree {
            get {
                return ResourceManager.GetString("Animation_InvalidDegree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Origin must have 2, comma seperated, components. X, Y. Ignoring..
        /// </summary>
        internal static string Animation_InvalidOrigin {
            get {
                return ResourceManager.GetString("Animation_InvalidOrigin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot parse radian measurement..
        /// </summary>
        internal static string Animation_InvalidRadian {
            get {
                return ResourceManager.GetString("Animation_InvalidRadian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Region must have 4, comma seperated, components. X, Y, Width, Height. Ignoring..
        /// </summary>
        internal static string Animation_InvalidRegion {
            get {
                return ResourceManager.GetString("Animation_InvalidRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale must have 2, comma seperated, components. X, Y. Ignoring..
        /// </summary>
        internal static string Animation_InvalidScale {
            get {
                return ResourceManager.GetString("Animation_InvalidScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The animation region must remain the same width and height throught the entire animation..
        /// </summary>
        internal static string Animation_RegionMustRemainSame {
            get {
                return ResourceManager.GetString("Animation_RegionMustRemainSame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown rotation format &quot;{0}&quot;, defaulting to degrees..
        /// </summary>
        internal static string Animation_UnknownRotationFormat {
            get {
                return ResourceManager.GetString("Animation_UnknownRotationFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Animation type &quot;{0}&quot;..
        /// </summary>
        internal static string Animation_UnknownType {
            get {
                return ResourceManager.GetString("Animation_UnknownType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot parse value..
        /// </summary>
        internal static string CannotParseValue {
            get {
                return ResourceManager.GetString("CannotParseValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Developer ID &quot;{0}&quot; already exists..
        /// </summary>
        internal static string DevIDAlreadyExists {
            get {
                return ResourceManager.GetString("DevIDAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are still argument types that exist. Something is not right..
        /// </summary>
        internal static string Entity_ArgsNotEmpty {
            get {
                return ResourceManager.GetString("Entity_ArgsNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t find custom entity base type. If this type is not based off SGDE.Entity then an error will get thrown on runtime..
        /// </summary>
        internal static string Entity_Custom_CantFindType {
            get {
                return ResourceManager.GetString("Entity_Custom_CantFindType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Entity is not based off SGDE.Entity. Full support doesn&apos;t exist for extended types..
        /// </summary>
        internal static string Entity_Custom_NotBasedOffEntity {
            get {
                return ResourceManager.GetString("Entity_Custom_NotBasedOffEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index already exists at {0}..
        /// </summary>
        internal static string Entity_IndexNeeded {
            get {
                return ResourceManager.GetString("Entity_IndexNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index must be a positive integer..
        /// </summary>
        internal static string Entity_NeedPosInt {
            get {
                return ResourceManager.GetString("Entity_NeedPosInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not parse Sprite region. Values must be integers and seperated by a dash..
        /// </summary>
        internal static string Entity_Sprite_CannotParseRegion {
            get {
                return ResourceManager.GetString("Entity_Sprite_CannotParseRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one animation can be default for a built-in animation. Ignoring default attibute..
        /// </summary>
        internal static string Entity_Sprite_DefaultTooMany {
            get {
                return ResourceManager.GetString("Entity_Sprite_DefaultTooMany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not valid Sprite region. Ignoring..
        /// </summary>
        internal static string Entity_Sprite_InvalidRegion {
            get {
                return ResourceManager.GetString("Entity_Sprite_InvalidRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animation ID must be a valid positive number..
        /// </summary>
        internal static string Entity_Sprite_PositiveAID {
            get {
                return ResourceManager.GetString("Entity_Sprite_PositiveAID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sprite ID must be a valid positive number..
        /// </summary>
        internal static string Entity_Sprite_PositiveID {
            get {
                return ResourceManager.GetString("Entity_Sprite_PositiveID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t have both relitive and absoulte rotation. Defaulting to absoulte..
        /// </summary>
        internal static string Entity_Sprite_RelAbsRotation {
            get {
                return ResourceManager.GetString("Entity_Sprite_RelAbsRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t have both relitive and absoulte scale. Defaulting to absoulte..
        /// </summary>
        internal static string Entity_Sprite_RelAbsScale {
            get {
                return ResourceManager.GetString("Entity_Sprite_RelAbsScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sprite must contain a Sprite ID..
        /// </summary>
        internal static string Entity_Sprite_RequiresID {
            get {
                return ResourceManager.GetString("Entity_Sprite_RequiresID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one animation node allowed on Sprite node. Will only process one..
        /// </summary>
        internal static string Entity_Sprite_TooManyAnimations {
            get {
                return ResourceManager.GetString("Entity_Sprite_TooManyAnimations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity ID doesn&apos;t exist..
        /// </summary>
        internal static string EntityIDDoesNotExist {
            get {
                return ResourceManager.GetString("EntityIDDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not parse frame time. Disabling fixed-time..
        /// </summary>
        internal static string Game_BadFrameTime {
            get {
                return ResourceManager.GetString("Game_BadFrameTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map ID {0} already exists..
        /// </summary>
        internal static string Game_MapIDExists {
            get {
                return ResourceManager.GetString("Game_MapIDExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No map exists at ID {0}..
        /// </summary>
        internal static string Game_MapIDNotExist {
            get {
                return ResourceManager.GetString("Game_MapIDNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map reference is not a SGDE map..
        /// </summary>
        internal static string Game_MapRefNotSGDE {
            get {
                return ResourceManager.GetString("Game_MapRefNotSGDE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one map can be the initially loaded map..
        /// </summary>
        internal static string Game_TooManyInitialMaps {
            get {
                return ResourceManager.GetString("Game_TooManyInitialMaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown target platform {0}..
        /// </summary>
        internal static string Game_UnknownTarget {
            get {
                return ResourceManager.GetString("Game_UnknownTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Window is set to be resizeable. This could cause issues if the game is not prepared for a resize event..
        /// </summary>
        internal static string Game_WindowResizeable {
            get {
                return ResourceManager.GetString("Game_WindowResizeable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not a valid SGDE data element..
        /// </summary>
        internal static string InvalidSGDEElement {
            get {
                return ResourceManager.GetString("InvalidSGDEElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid SGDE version, must be between {0} and {1}..
        /// </summary>
        internal static string InvalidSGDEVersion {
            get {
                return ResourceManager.GetString("InvalidSGDEVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity ID {0} already exists..
        /// </summary>
        internal static string Map_EntityIDExists {
            get {
                return ResourceManager.GetString("Map_EntityIDExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity reference is not a SGDE entity..
        /// </summary>
        internal static string Map_EntityRefNotSGDE {
            get {
                return ResourceManager.GetString("Map_EntityRefNotSGDE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map element must exist..
        /// </summary>
        internal static string Map_MissingMapElement {
            get {
                return ResourceManager.GetString("Map_MissingMapElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource element must exist..
        /// </summary>
        internal static string Map_MissingResourceElement {
            get {
                return ResourceManager.GetString("Map_MissingResourceElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No child nodes..
        /// </summary>
        internal static string NoChildNodes {
            get {
                return ResourceManager.GetString("NoChildNodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SGDE Importor.
        /// </summary>
        internal static string SGDEImporter {
            get {
                return ResourceManager.GetString("SGDEImporter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SGDE Element Processor.
        /// </summary>
        internal static string SGDEProcessor {
            get {
                return ResourceManager.GetString("SGDEProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type: &quot;{0}&quot; is not implemented..
        /// </summary>
        internal static string SGDETypeNotImplemented {
            get {
                return ResourceManager.GetString("SGDETypeNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animation must be a built in type..
        /// </summary>
        internal static string SpriteSheet_AnimationMustBeInternal {
            get {
                return ResourceManager.GetString("SpriteSheet_AnimationMustBeInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SpriteSheet must contain a Source..
        /// </summary>
        internal static string SpriteSheet_NeedsSource {
            get {
                return ResourceManager.GetString("SpriteSheet_NeedsSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SpriteSheet must contain an ID..
        /// </summary>
        internal static string SpriteSheet_RequiresID {
            get {
                return ResourceManager.GetString("SpriteSheet_RequiresID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown sprite type..
        /// </summary>
        internal static string SpriteSheet_UnknownType {
            get {
                return ResourceManager.GetString("SpriteSheet_UnknownType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SVG Importer.
        /// </summary>
        internal static string SVGImporter {
            get {
                return ResourceManager.GetString("SVGImporter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SVG Processor.
        /// </summary>
        internal static string SVGProcessor {
            get {
                return ResourceManager.GetString("SVGProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft changed the BuildCoordinator. You&apos;ll need to edit the code to adapt..
        /// </summary>
        internal static string Utils_ChangedBuild {
            get {
                return ResourceManager.GetString("Utils_ChangedBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t parse {0} &quot;{1}&quot;. Skipping..
        /// </summary>
        internal static string Utils_InvalidEnum {
            get {
                return ResourceManager.GetString("Utils_InvalidEnum", resourceCulture);
            }
        }
    }
}
